"""initial

Revision ID: 06705cb490e3
Revises: 
Create Date: 2023-02-23 00:44:27.501363

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils


# revision identifiers, used by Alembic.
revision = '06705cb490e3'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('regular_users',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('tg_bot_user_id', sa.Integer(), nullable=False),
    sa.Column('join_date', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tg_bot_user_id')
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('created_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('can_answer_questions', sa.Boolean(), nullable=False),
    sa.Column('can_manage_support_users', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('questions',
    sa.Column('regular_user_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('tg_message_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['regular_user_id'], ['regular_users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tg_message_id')
    )
    op.create_table('questions_attachments',
    sa.Column('question_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('tg_file_id', sa.String(length=255), nullable=False),
    sa.Column('attachment_type', sa.Enum('IMAGE', 'VIDEO', 'AUDIO', 'VOICE', 'DOCUMENT', name='attachmenttype'), nullable=False),
    sa.Column('caption', sa.Text(), nullable=True),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('support_users',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('descriptive_name', sa.String(length=255), nullable=False),
    sa.Column('tg_bot_user_id', sa.Integer(), nullable=False),
    sa.Column('join_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('is_owner', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('current_question_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['current_question_id'], ['questions.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ondelete='SET DEFAULT'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tg_bot_user_id')
    )
    op.create_table('answers',
    sa.Column('support_user_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('question_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('is_useful', sa.Boolean(), nullable=True),
    sa.Column('tg_message_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['support_user_id'], ['support_users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tg_message_id')
    )
    op.create_table('answers_attachments',
    sa.Column('answer_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('tg_file_id', sa.String(length=255), nullable=False),
    sa.Column('attachment_type', sa.Enum('IMAGE', 'VIDEO', 'AUDIO', 'VOICE', 'DOCUMENT', name='attachmenttype'), nullable=False),
    sa.Column('caption', sa.Text(), nullable=True),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['answer_id'], ['answers.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('answers_attachments')
    op.drop_table('answers')
    op.drop_table('support_users')
    op.drop_table('questions_attachments')
    op.drop_table('questions')
    op.drop_table('roles')
    op.drop_table('regular_users')
    # ### end Alembic commands ###
